# @PyBotWords_Bot


import telebot
from telebot.types import Message
from os import getenv
from dotenv import load_dotenv
from telebot.types import ReplyKeyboardMarkup
from random import randint


load_dotenv()
bot_token = getenv("TOKEN")
print("Using token ...", bot_token[-5:])


bot = telebot.TeleBot(bot_token)

words_dict = {
    "apple": "—è–±–ª–æ–∫–æ",
    "book": "–∫–Ω–∏–≥–∞",
    "cat": "–∫–æ—Ç",
    "dog": "—Å–æ–±–∞–∫–∞",
    "egg": "—è–π—Ü–æ",
    "fish": "—Ä—ã–±–∞",
    "house": "–¥–æ–º",
    "tree": "–¥–µ—Ä–µ–≤–æ",
    "sun": "—Å–æ–ª–Ω—Ü–µ",
    "moon": "–ª—É–Ω–∞",
    "car": "–º–∞—à–∏–Ω–∞",
    "pen": "—Ä—É—á–∫–∞",
    "chair": "—Å—Ç—É–ª",
    "water": "–≤–æ–¥–∞",
    "milk": "–º–æ–ª–æ–∫–æ",
    "bird": "–ø—Ç–∏—Ü–∞",
    "table": "—Å—Ç–æ–ª",
    "ball": "–º—è—á",
    "hand": "—Ä—É–∫–∞",
    "window": "–æ–∫–Ω–æ",
}

words_dict = {
    "Picture": "–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å",
    "Bustling": "–û–∂–∏–≤–ª—ë–Ω–Ω—ã–π",
    "Marketplace": "–†—ã–Ω–æ–∫",
    "Traders": "–¢–æ—Ä–≥–æ–≤—Ü—ã",
    "Shouting": "–ö—Ä–∏—á–∞—Ç—å",
    "Prices": "–¶–µ–Ω—ã",
    "Buyers": "–ü–æ–∫—É–ø–∞—Ç–µ–ª–∏",
    "Haggling": "–¢–æ—Ä–≥–æ–≤–∞—Ç—å—Å—è",
    "Deals": "–°–¥–µ–ª–∫–∏",
    "Imagine": "–í–æ–æ–±—Ä–∞–∑–∏—Ç—å",
    "Expanding": "–†–∞—Å—à–∏—Ä—è—Ç—å—Å—è",
    "Encompass": "–û—Ö–≤–∞—Ç—ã–≤–∞—Ç—å",
    "Entire": "–í–µ—Å—å",
    "World": "–ú–∏—Ä",
    "Economy": "–≠–∫–æ–Ω–æ–º–∏–∫–∞",
    "Simplest": "–ü—Ä–æ—Å—Ç–µ–π—à–∏–π",
    "Form": "–§–æ—Ä–º–∞",
    "Ever-changing": "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ –º–µ–Ω—è—é—â–∏–π—Å—è",
    "Dynamic": "–î–∏–Ω–∞–º–∏—á–Ω—ã–π",
    "System": "–°–∏—Å—Ç–µ–º–∞",
    "Saving": "–≠–∫–æ–Ω–æ–º–∏—è",
    "Allowance": "–ö–∞—Ä–º–∞–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏",
    "Spending": "–¢—Ä–∞—Ç–∞",
    "Mall": "–¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä",
    "Planning": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "Invest": "–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å",
    "Stocks": "–ê–∫—Ü–∏–∏",
    "Future": "–ë—É–¥—É—â–µ–µ",
    "Fundamental": "–§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π",
    "Concepts": "–ö–æ–Ω—Ü–µ–ø—Ü–∏–∏",
    "Economics": "–≠–∫–æ–Ω–æ–º–∏–∫–∞",
    "Decipher": "–†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞—Ç—å",
    "Financial": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π",
    "News": "–ù–æ–≤–æ—Å—Ç–∏",
    "Informed": "–û—Å–≤–µ–¥–æ–º–ª—ë–Ω–Ω—ã–π",
    "Decisions": "–†–µ—à–µ–Ω–∏—è",
    "Shape": "–§–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å",
    "Participant": "–£—á–∞—Å—Ç–Ω–∏–∫",
    "Journey": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ",
    "Understanding": "–ü–æ–Ω–∏–º–∞–Ω–∏–µ",
    "Resources": "–†–µ—Å—É—Ä—Å—ã",
    "Companies": "–ö–æ–º–ø–∞–Ω–∏–∏",
    "Governments": "–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞",
    "Value": "–¶–µ–Ω–Ω–æ—Å—Ç—å",
    "Supply": "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
    "Demand": "–°–ø—Ä–æ—Å",
    "Market": "–†—ã–Ω–æ–∫",
    "Determines": "–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç",
    "Phone": "–¢–µ–ª–µ—Ñ–æ–Ω",
    "Available": "–î–æ—Å—Ç—É–ø–Ω—ã–π",
    "Increase": "–£–≤–µ–ª–∏—á–∏–≤–∞—Ç—å",
    "Fluctuate": "–ö–æ–ª–µ–±–∞—Ç—å—Å—è",
    "Boom": "–ü–æ–¥—ä—ë–º",
    "Bust": "–°–ø–∞–¥",
    "Affect": "–í–ª–∏—è—Ç—å",
    "Jobs": "–†–∞–±–æ—Ç–∞",
    "Cost": "–°—Ç–æ–∏–º–æ—Å—Ç—å",
    "Sneakers": "–ö—Ä–æ—Å—Å–æ–≤–∫–∏",
    "Money": "–î–µ–Ω—å–≥–∏",
    "Medium": "–°—Ä–µ–¥—Å—Ç–≤–æ",
    "Exchange": "–û–±–º–µ–Ω",
    "Barter": "–ë–∞—Ä—Ç–µ—Ä",
    "Swap": "–û–±–º–µ–Ω",
    "Goods": "–¢–æ–≤–∞—Ä—ã",
    "Services": "–£—Å–ª—É–≥–∏",
    "Banks": "–ë–∞–Ω–∫–∏",
    "Safeguard": "–ó–∞—â–∏—â–∞—Ç—å",
    "Deposit": "–î–µ–ø–æ–∑–∏—Ç",
    "Lend": "–î–∞–≤–∞—Ç—å –≤ –¥–æ–ª–≥",
    "Businesses": "–ë–∏–∑–Ω–µ—Å",
    "Individuals": "–ß–∞—Å—Ç–Ω—ã–µ –ª–∏—Ü–∞",
    "Charge": "–í–∑–∏–º–∞—Ç—å",
    "Interest": "–ü—Ä–æ—Ü–µ–Ω—Ç",
    "Loans": "–ö—Ä–µ–¥–∏—Ç—ã",
    "Profit": "–ü—Ä–∏–±—ã–ª—å",
    "Regulating": "–†–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "Circulating": "–û–±—Ä–∞—â–µ–Ω–∏–µ",
    "Inflation": "–ò–Ω—Ñ–ª—è—Ü–∏—è",
    "Trade": "–¢–æ—Ä–≥–æ–≤–ª—è",
    "Buy": "–ü–æ–∫—É–ø–∞—Ç—å",
    "Sell": "–ü—Ä–æ–¥–∞–≤–∞—Ç—å",
    "Exchange Rates": "–û–±–º–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã",
    "Currency": "–í–∞–ª—é—Ç–∞",
    "Worth": "–°—Ç–æ–∏–º–æ—Å—Ç—å",
    "Travel": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ",
    "Abroad": "–ó–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π",
    "Purchasing Power": "–ü–æ–∫—É–ø–∞—Ç–µ–ª—å–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å",
    "Decrease": "–£–º–µ–Ω—å—à–µ–Ω–∏–µ",
    "Central Bank": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –±–∞–Ω–∫",
    "Savings Account": "–°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç",
    "Borrowing": "–ó–∞–∏–º—Å—Ç–≤–æ–≤–∞–Ω–∏–µ",
    "Impact": "–í–ª–∏—è–Ω–∏–µ",
    "Economic Climate": "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∫–ª–∏–º–∞—Ç",
    "Recessions": "–†–µ—Ü–µ—Å—Å–∏–∏",
    "Budget": "–ë—é–¥–∂–µ—Ç",
    "Wisely": "–ú—É–¥—Ä–æ",
}

word_pairs = [x for x in words_dict.items()]

user_sessions = {}


def send_word(message: Message):

    random4 = []
    while len(random4) < 4:
        new_pair = word_pairs[randint(0, len(word_pairs) - 1)]
        if new_pair[0] not in random4:
            random4.append(new_pair)

    pair = random4[randint(0, 3)]

    english_word = pair[0]
    russian_word = pair[1]

    keyboard = ReplyKeyboardMarkup(row_width=2)
    button1 = telebot.types.KeyboardButton(random4[0][1])
    button2 = telebot.types.KeyboardButton(random4[1][1])
    button3 = telebot.types.KeyboardButton(random4[2][1])
    button4 = telebot.types.KeyboardButton(random4[3][1])
    keyboard.add(button1, button2, button3, button4)

    bot.send_message(
        chat_id=message.chat.id,
        text=f"–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ \n{english_word}",
        reply_markup=keyboard,
    )

    user_sessions[message.from_user.id] = russian_word


@bot.message_handler(commands=["start"])
def handle_start(message: Message):
    print(
        f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} {message.from_user.username} {message.from_user.first_name} {message.from_user.last_name}"
    )
    username = (
        message.from_user.full_name
        if message.from_user.full_name
        else message.from_user.username
    )
    text = f"""–ü—Ä–∏–≤–µ—Ç {username}! üëã 

–Ø –±–æ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤, –≤–µ—Ä—Å–∏—è 0.6.0.

–î–∞–≤–∞–π –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ–º—Å—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ. –ú–æ–∂–µ—à—å –æ—Ç–≤–µ—á–∞—Ç—å –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è —Å–µ–±—è —Ç–µ–º–ø–µ.

–ù—É —á—Ç–æ, –Ω–∞—á–Ω—ë–º? ‚¨áÔ∏è
"""
    bot.send_message(message.chat.id, text)

    send_word(message)


@bot.message_handler()
def handle_message(message: Message):
    print(
        f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} {message.from_user.username} {message.from_user.first_name} {message.from_user.last_name}"
    )
    print(message.text)
    word = message.text
    correct_word = user_sessions[message.from_user.id]
    if word == correct_word:
        text = "–í–µ—Ä–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–æ–≤—É"
        bot.send_message(message.chat.id, text)
        send_word(message)
    else:
        text = f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
        bot.send_message(message.chat.id, text)


def print_info(message):
    info = f"""–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: `{message.text}`
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: `{message.from_user.username}`
–ß–∞—Ç: `{message.chat.id}`
"""
    print(info)
    bot.send_message(message.chat.id, info, parse_mode="Markdown")


bot.infinity_polling()
